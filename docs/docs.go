// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ActiveAddresses/Count": {
            "get": {
                "tags": [
                    "Coins"
                ],
                "operationId": "ActiveAddressesCount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Address/{address}": {
            "get": {
                "tags": [
                    "Address"
                ],
                "operationId": "Address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/Address"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Address/{address}/Penalties": {
            "get": {
                "tags": [
                    "Address"
                ],
                "operationId": "AddressPenalties",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Penalty"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Address/{address}/Penalties/Count": {
            "get": {
                "tags": [
                    "Address"
                ],
                "operationId": "AddressPenaltiesCount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Address/{address}/Txs": {
            "get": {
                "tags": [
                    "Address"
                ],
                "operationId": "AddressTxs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/TransactionSummary"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Address/{address}/Txs/Count": {
            "get": {
                "tags": [
                    "Address"
                ],
                "operationId": "AddressTxsCount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Balances": {
            "get": {
                "tags": [
                    "Coins"
                ],
                "operationId": "Balances",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Balance"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Block/{id}": {
            "get": {
                "tags": [
                    "Block"
                ],
                "operationId": "Block",
                "parameters": [
                    {
                        "type": "string",
                        "description": "block hash or height",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/Block"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Block/{id}/Coins": {
            "get": {
                "tags": [
                    "Block"
                ],
                "operationId": "BlockCoins",
                "parameters": [
                    {
                        "type": "string",
                        "description": "block hash or height",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/Coins"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Block/{id}/Txs": {
            "get": {
                "tags": [
                    "Block"
                ],
                "operationId": "BlockTxs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "block hash or height",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "allOf": [
                                                    {
                                                        "$ref": "#/definitions/TransactionSummary"
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "data": {
                                                                "$ref": "#/definitions/TransactionSpecificData"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Block/{id}/Txs/Count": {
            "get": {
                "tags": [
                    "Block"
                ],
                "operationId": "BlockTxsCount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "block hash or height",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/CirculatingSupply": {
            "get": {
                "tags": [
                    "Coins"
                ],
                "operationId": "CirculatingSupply",
                "parameters": [
                    {
                        "enum": [
                            "full",
                            "short"
                        ],
                        "type": "string",
                        "description": "result value format",
                        "name": "format",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Coins": {
            "get": {
                "tags": [
                    "Coins"
                ],
                "operationId": "Coins",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/Coins"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/Last": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "LastEpoch",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/Epoch"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "Epoch",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/Epoch"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Authors/Bad": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochBadAuthors",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/BadAuthor"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Authors/Bad/Count": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochBadAuthorsCount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Blocks": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochBlocks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/BlockSummary"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Blocks/Count": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochBlocksCount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Coins": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochCoins",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/Coins"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/FlipAnswersSummary": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochFlipAnswersSummary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/FlipAnswerCount"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/FlipStatesSummary": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochFlipStatesSummary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/FlipStateCount"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/FlipWrongWordsSummary": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochFlipWrongWordsSummary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/NullableBoolValueCount"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Flips": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochFlips",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/FlipSummary"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Flips/Count": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochFlipsCount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/FundPayments": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochFundPayments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/FundPayment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identities": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochIdentities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "identity state filter",
                        "name": "states[]",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "identity previous state filter",
                        "name": "prevStates[]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/EpochIdentity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identities/Count": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochIdentitiesCount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "identity state filter",
                        "name": "states[]",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "identity previous state filter",
                        "name": "prevStates[]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identity/{address}": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "EpochIdentity",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/EpochIdentity"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identity/{address}/Answers/Long": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "EpochIdentityLongAnswers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Answer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identity/{address}/Answers/Short": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "EpochIdentityShortAnswers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Answer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identity/{address}/Authors/Bad": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "EpochIdentityBadAuthor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/BadAuthor"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identity/{address}/AvailableInvites": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "EpochIdentityAvailableInvites",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/EpochInvites"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identity/{address}/Flips": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "EpochIdentityFlips",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/FlipSummary"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identity/{address}/FlipsToSolve/Long": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "EpochIdentityLongFlipsToSolve",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identity/{address}/FlipsToSolve/Short": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "EpochIdentityShortFlipsToSolve",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identity/{address}/ReportRewards": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "EpochIdentityReportedFlipRewards",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/ReportedFlipReward"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identity/{address}/RewardedFlips": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "EpochIdentityRewardedFlips",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/RewardedFlip"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identity/{address}/RewardedInvites": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "EpochIdentityRewardedInvites",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/RewardedInvite"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identity/{address}/Rewards": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "EpochIdentityRewards",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Reward"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identity/{address}/SavedInviteRewards": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "EpochIdentitySavedInviteRewards",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/SavedInviteRewardCount"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Identity/{address}/ValidationTxs": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "EpochIdentityValidationTxs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/TransactionSummary"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/IdentityRewards": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochIdentitiesRewards",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Rewards"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/IdentityRewards/Count": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochIdentitiesRewardsCount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/IdentityStatesInterimSummary": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochIdentityStatesInterimSummary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/IdentityStateCount"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/IdentityStatesSummary": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochIdentityStatesSummary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/IdentityStateCount"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/InviteStatesSummary": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochInviteStatesSummary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/IdentityStateCount"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Invites": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochInvites",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Invite"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Invites/Count": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochInvitesCount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/InvitesSummary": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochInvitesSummary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/InvitesSummary"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/RewardsSummary": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochRewardsSummary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/RewardsSummary"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Txs": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochTxs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "allOf": [
                                                    {
                                                        "$ref": "#/definitions/TransactionSummary"
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "data": {
                                                                "$ref": "#/definitions/TransactionSpecificData"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epoch/{epoch}/Txs/Count": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochTxsCount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "epoch",
                        "name": "epoch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epochs": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "Epochs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/EpochSummary"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Epochs/Count": {
            "get": {
                "tags": [
                    "Epochs"
                ],
                "operationId": "EpochsCount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Flip/{hash}": {
            "get": {
                "tags": [
                    "Flip"
                ],
                "operationId": "Flip",
                "parameters": [
                    {
                        "type": "string",
                        "description": "flip hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/Flip"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Flip/{hash}/Answers/Long": {
            "get": {
                "tags": [
                    "Flip"
                ],
                "operationId": "FlipLongAnswers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "flip hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Answer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Flip/{hash}/Answers/Short": {
            "get": {
                "tags": [
                    "Flip"
                ],
                "operationId": "FlipShortAnswers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "flip hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Answer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Flip/{hash}/Content": {
            "get": {
                "tags": [
                    "Flip"
                ],
                "operationId": "FlipContent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "flip hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/FlipContent"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "Identity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/Identity"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}/Age": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "IdentityAge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}/CurrentFlipCids": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "IdentityCurrentFlipCids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}/EpochRewards": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "IdentityEpochRewards",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Rewards"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}/EpochRewards/Count": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "IdentityEpochRewardsCount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}/Epochs": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "IdentityEpochs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/EpochIdentity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}/Epochs/Count": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "IdentityEpochsCount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}/FlipQualifiedAnswers": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "IdentityFlipQualifiedAnswers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/FlipAnswerCount"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}/FlipStates": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "IdentityFlipStates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/FlipStateCount"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}/Flips": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "IdentityFlips",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/FlipSummary"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}/Flips/Count": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "IdentityFlipsCount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}/Invites": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "IdentityInvites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Invite"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}/Invites/Count": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "IdentityInvitesCount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}/Rewards": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "IdentityRewards",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "continuation token to get next page items",
                        "name": "continuationToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponsePage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Reward"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Identity/{address}/Rewards/Count": {
            "get": {
                "tags": [
                    "Identity"
                ],
                "operationId": "IdentityRewardsCount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Search": {
            "get": {
                "tags": [
                    "Search"
                ],
                "operationId": "Search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "value to search",
                        "name": "value",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Entity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Transaction/{hash}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "operationId": "Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/Transaction"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "data": {
                                                            "$ref": "#/definitions/TransactionSpecificData"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/Transaction/{hash}/Raw": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "operationId": "TransactionRaw",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "Request number limit exceeded"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        }
    },
    "definitions": {
        "Address": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "balance": {
                    "type": "string"
                },
                "flipsCount": {
                    "type": "integer"
                },
                "reportedFlipsCount": {
                    "type": "integer"
                },
                "stake": {
                    "type": "string"
                },
                "txCount": {
                    "type": "integer"
                }
            }
        },
        "Answer": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cid": {
                    "type": "string"
                },
                "flipAnswer": {
                    "type": "string",
                    "enum": [
                        "None",
                        "Left",
                        "Right"
                    ]
                },
                "flipGrade": {
                    "type": "integer"
                },
                "flipStatus": {
                    "type": "string",
                    "enum": [
                        "NotQualified",
                        "Qualified",
                        "WeaklyQualified",
                        "QualifiedByNone"
                    ]
                },
                "flipWrongWords": {
                    "description": "Deprecated",
                    "type": "boolean"
                },
                "point": {
                    "type": "number"
                },
                "respAnswer": {
                    "type": "string",
                    "enum": [
                        "None",
                        "Left",
                        "Right"
                    ]
                },
                "respGrade": {
                    "type": "integer"
                },
                "respWrongWords": {
                    "description": "Deprecated",
                    "type": "boolean"
                }
            }
        },
        "BadAuthor": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "epoch": {
                    "type": "integer"
                },
                "prevState": {
                    "type": "string",
                    "enum": [
                        "Undefined",
                        "Invite",
                        "Candidate",
                        "Verified",
                        "Suspended",
                        "Killed",
                        "Zombie",
                        "Newbie",
                        "Human"
                    ]
                },
                "reason": {
                    "type": "string",
                    "enum": [
                        "NoQualifiedFlips",
                        "QualifiedByNone",
                        "WrongWords"
                    ]
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "Undefined",
                        "Invite",
                        "Candidate",
                        "Verified",
                        "Suspended",
                        "Killed",
                        "Zombie",
                        "Newbie",
                        "Human"
                    ]
                },
                "wrongWords": {
                    "type": "boolean"
                }
            }
        },
        "Balance": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "balance": {
                    "type": "string"
                },
                "stake": {
                    "type": "string"
                }
            }
        },
        "Block": {
            "type": "object",
            "properties": {
                "bodySize": {
                    "type": "integer"
                },
                "epoch": {
                    "type": "integer"
                },
                "feeRate": {
                    "type": "string"
                },
                "flags": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "IdentityUpdate",
                            "FlipLotteryStarted",
                            "ShortSessionStarted",
                            "LongSessionStarted",
                            "AfterLongSessionStarted",
                            "ValidationFinished",
                            "Snapshot",
                            "OfflinePropose",
                            "OfflineCommit"
                        ]
                    }
                },
                "fullSize": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "isEmpty": {
                    "type": "boolean"
                },
                "proposer": {
                    "type": "string"
                },
                "proposerVrfScore": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "txCount": {
                    "type": "integer"
                },
                "validatorsCount": {
                    "type": "integer"
                },
                "vrfProposerThreshold": {
                    "type": "number"
                }
            }
        },
        "BlockSummary": {
            "type": "object",
            "properties": {
                "bodySize": {
                    "type": "integer"
                },
                "coins": {
                    "type": "object",
                    "$ref": "#/definitions/Coins"
                },
                "feeRate": {
                    "type": "string"
                },
                "flags": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "IdentityUpdate",
                            "FlipLotteryStarted",
                            "ShortSessionStarted",
                            "LongSessionStarted",
                            "AfterLongSessionStarted",
                            "ValidationFinished",
                            "Snapshot",
                            "OfflinePropose",
                            "OfflineCommit"
                        ]
                    }
                },
                "fullSize": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "isEmpty": {
                    "type": "boolean"
                },
                "proposer": {
                    "type": "string"
                },
                "proposerVrfScore": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "txCount": {
                    "type": "integer"
                },
                "vrfProposerThreshold": {
                    "type": "number"
                }
            }
        },
        "Coins": {
            "type": "object",
            "properties": {
                "burnt": {
                    "type": "string"
                },
                "minted": {
                    "type": "string"
                },
                "totalBalance": {
                    "type": "string"
                },
                "totalStake": {
                    "type": "string"
                }
            }
        },
        "Entity": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "enum": [
                        "Address",
                        "Identity",
                        "Epoch",
                        "Block",
                        "Transaction",
                        "Flip"
                    ]
                },
                "ref": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "Epoch": {
            "type": "object",
            "properties": {
                "epoch": {
                    "type": "integer"
                },
                "minScoreForInvite": {
                    "type": "number"
                },
                "validationFirstBlockHeight": {
                    "type": "integer"
                },
                "validationTime": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                }
            }
        },
        "EpochIdentity": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "approved": {
                    "type": "boolean"
                },
                "availableFlips": {
                    "type": "integer"
                },
                "birthEpoch": {
                    "type": "integer"
                },
                "epoch": {
                    "type": "integer"
                },
                "longAnswers": {
                    "type": "object",
                    "$ref": "#/definitions/IdentityAnswersSummary"
                },
                "longAnswersCount": {
                    "type": "integer"
                },
                "madeFlips": {
                    "type": "integer"
                },
                "missed": {
                    "type": "boolean"
                },
                "prevState": {
                    "type": "string",
                    "enum": [
                        "Undefined",
                        "Invite",
                        "Candidate",
                        "Verified",
                        "Suspended",
                        "Killed",
                        "Zombie",
                        "Newbie",
                        "Human"
                    ]
                },
                "requiredFlips": {
                    "type": "integer"
                },
                "shortAnswers": {
                    "type": "object",
                    "$ref": "#/definitions/IdentityAnswersSummary"
                },
                "shortAnswersCount": {
                    "type": "integer"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "Undefined",
                        "Invite",
                        "Candidate",
                        "Verified",
                        "Suspended",
                        "Killed",
                        "Zombie",
                        "Newbie",
                        "Human"
                    ]
                },
                "totalShortAnswers": {
                    "type": "object",
                    "$ref": "#/definitions/IdentityAnswersSummary"
                },
                "totalValidationReward": {
                    "type": "string"
                }
            }
        },
        "EpochInvites": {
            "type": "object",
            "properties": {
                "epoch": {
                    "type": "integer"
                },
                "invites": {
                    "type": "integer"
                }
            }
        },
        "EpochSummary": {
            "type": "object",
            "properties": {
                "blockCount": {
                    "type": "integer"
                },
                "coins": {
                    "type": "object",
                    "$ref": "#/definitions/Coins"
                },
                "emptyBlockCount": {
                    "type": "integer"
                },
                "epoch": {
                    "type": "integer"
                },
                "flipCount": {
                    "type": "integer"
                },
                "inviteCount": {
                    "type": "integer"
                },
                "minScoreForInvite": {
                    "type": "number"
                },
                "rewards": {
                    "type": "object",
                    "$ref": "#/definitions/RewardsSummary"
                },
                "txCount": {
                    "type": "integer"
                },
                "validatedCount": {
                    "type": "integer"
                },
                "validationTime": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "Flip": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string",
                    "enum": [
                        "",
                        "None",
                        "Left",
                        "Right"
                    ]
                },
                "author": {
                    "type": "string"
                },
                "blockHash": {
                    "type": "string"
                },
                "blockHeight": {
                    "type": "integer"
                },
                "epoch": {
                    "type": "integer"
                },
                "grade": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "",
                        "NotQualified",
                        "Qualified",
                        "WeaklyQualified",
                        "QualifiedByNone"
                    ]
                },
                "timestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "txHash": {
                    "type": "string"
                },
                "withPrivatePart": {
                    "type": "boolean"
                },
                "words": {
                    "type": "object",
                    "$ref": "#/definitions/FlipWords"
                },
                "wrongWords": {
                    "description": "Deprecated",
                    "type": "boolean"
                },
                "wrongWordsVotes": {
                    "type": "integer"
                }
            }
        },
        "FlipAnswerCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "value": {
                    "type": "string",
                    "enum": [
                        "",
                        "None",
                        "Left",
                        "Right"
                    ]
                }
            }
        },
        "FlipContent": {
            "type": "object",
            "properties": {
                "leftOrder": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "pics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rightOrder": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "FlipStateCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "value": {
                    "type": "string",
                    "enum": [
                        "",
                        "NotQualified",
                        "Qualified",
                        "WeaklyQualified",
                        "QualifiedByNone"
                    ]
                }
            }
        },
        "FlipSummary": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string",
                    "enum": [
                        "",
                        "None",
                        "Left",
                        "Right"
                    ]
                },
                "author": {
                    "type": "string"
                },
                "cid": {
                    "type": "string"
                },
                "epoch": {
                    "type": "integer"
                },
                "grade": {
                    "type": "integer"
                },
                "icon": {
                    "type": "string"
                },
                "longRespCount": {
                    "type": "integer"
                },
                "shortRespCount": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "",
                        "NotQualified",
                        "Qualified",
                        "WeaklyQualified",
                        "QualifiedByNone"
                    ]
                },
                "timestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "withPrivatePart": {
                    "type": "boolean"
                },
                "words": {
                    "type": "object",
                    "$ref": "#/definitions/FlipWords"
                },
                "wrongWords": {
                    "description": "Deprecated",
                    "type": "boolean"
                },
                "wrongWordsVotes": {
                    "type": "integer"
                }
            }
        },
        "FlipWord": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "FlipWords": {
            "type": "object",
            "properties": {
                "word1": {
                    "type": "object",
                    "$ref": "#/definitions/FlipWord"
                },
                "word2": {
                    "type": "object",
                    "$ref": "#/definitions/FlipWord"
                }
            }
        },
        "FundPayment": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "balance": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "FoundationPayouts",
                        "ZeroWalletFund"
                    ]
                }
            }
        },
        "Identity": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "totalShortAnswers": {
                    "type": "object",
                    "$ref": "#/definitions/IdentityAnswersSummary"
                }
            }
        },
        "IdentityAnswersSummary": {
            "type": "object",
            "properties": {
                "flipsCount": {
                    "type": "integer"
                },
                "point": {
                    "type": "number"
                }
            }
        },
        "IdentityStateCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "value": {
                    "type": "string",
                    "enum": [
                        "Undefined",
                        "Invite",
                        "Candidate",
                        "Verified",
                        "Suspended",
                        "Killed",
                        "Zombie",
                        "Newbie",
                        "Human"
                    ]
                }
            }
        },
        "Invite": {
            "type": "object",
            "properties": {
                "activationAuthor": {
                    "type": "string"
                },
                "activationHash": {
                    "type": "string"
                },
                "activationTimestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "author": {
                    "type": "string"
                },
                "epoch": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "killInviteeEpoch": {
                    "type": "integer"
                },
                "killInviteeHash": {
                    "type": "string"
                },
                "killInviteeTimestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "Undefined",
                        "Invite",
                        "Candidate",
                        "Verified",
                        "Suspended",
                        "Killed",
                        "Zombie",
                        "Newbie",
                        "Human"
                    ]
                },
                "timestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                }
            }
        },
        "InvitesSummary": {
            "type": "object",
            "properties": {
                "allCount": {
                    "type": "integer"
                },
                "usedCount": {
                    "type": "integer"
                }
            }
        },
        "NullableBoolValueCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "value": {
                    "type": "boolean"
                }
            }
        },
        "Penalty": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "blockHash": {
                    "type": "string"
                },
                "blockHeight": {
                    "type": "integer"
                },
                "epoch": {
                    "type": "integer"
                },
                "paid": {
                    "type": "string"
                },
                "penalty": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                }
            }
        },
        "ReportedFlipReward": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                },
                "cid": {
                    "type": "string"
                },
                "stake": {
                    "type": "string"
                }
            }
        },
        "Response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "$ref": "#/definitions/Error"
                },
                "result": {
                    "type": "object"
                }
            }
        },
        "ResponsePage": {
            "type": "object",
            "properties": {
                "continuationToken": {
                    "type": "string"
                },
                "error": {
                    "type": "object",
                    "$ref": "#/definitions/Error"
                },
                "result": {
                    "type": "object"
                }
            }
        },
        "Reward": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "balance": {
                    "type": "string"
                },
                "blockHeight": {
                    "type": "integer"
                },
                "epoch": {
                    "type": "integer"
                },
                "stake": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Validation",
                        "Flips",
                        "Invitations",
                        "Invitations2",
                        "Invitations3",
                        "SavedInvite",
                        "SavedInviteWin"
                    ]
                }
            }
        },
        "RewardedFlip": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string",
                    "enum": [
                        "",
                        "None",
                        "Left",
                        "Right"
                    ]
                },
                "author": {
                    "type": "string"
                },
                "cid": {
                    "type": "string"
                },
                "epoch": {
                    "type": "integer"
                },
                "grade": {
                    "type": "integer"
                },
                "icon": {
                    "type": "string"
                },
                "longRespCount": {
                    "type": "integer"
                },
                "rewarded": {
                    "type": "boolean"
                },
                "shortRespCount": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "",
                        "NotQualified",
                        "Qualified",
                        "WeaklyQualified",
                        "QualifiedByNone"
                    ]
                },
                "timestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "withPrivatePart": {
                    "type": "boolean"
                },
                "words": {
                    "type": "object",
                    "$ref": "#/definitions/FlipWords"
                },
                "wrongWords": {
                    "description": "Deprecated",
                    "type": "boolean"
                },
                "wrongWordsVotes": {
                    "type": "integer"
                }
            }
        },
        "RewardedInvite": {
            "type": "object",
            "properties": {
                "activationAuthor": {
                    "type": "string"
                },
                "activationHash": {
                    "type": "string"
                },
                "activationTimestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "author": {
                    "type": "string"
                },
                "epoch": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "killInviteeEpoch": {
                    "type": "integer"
                },
                "killInviteeHash": {
                    "type": "string"
                },
                "killInviteeTimestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "rewardType": {
                    "type": "string",
                    "enum": [
                        "",
                        "Invitations",
                        "Invitations2",
                        "Invitations3"
                    ]
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "Undefined",
                        "Invite",
                        "Candidate",
                        "Verified",
                        "Suspended",
                        "Killed",
                        "Zombie",
                        "Newbie",
                        "Human"
                    ]
                },
                "timestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                }
            }
        },
        "Rewards": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "epoch": {
                    "type": "integer"
                },
                "prevState": {
                    "type": "string",
                    "enum": [
                        "Undefined",
                        "Invite",
                        "Candidate",
                        "Verified",
                        "Suspended",
                        "Killed",
                        "Zombie",
                        "Newbie",
                        "Human"
                    ]
                },
                "rewards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Reward"
                    }
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "Undefined",
                        "Invite",
                        "Candidate",
                        "Verified",
                        "Suspended",
                        "Killed",
                        "Zombie",
                        "Newbie",
                        "Human"
                    ]
                }
            }
        },
        "RewardsSummary": {
            "type": "object",
            "properties": {
                "epoch": {
                    "type": "integer"
                },
                "flips": {
                    "type": "string"
                },
                "flipsShare": {
                    "type": "string"
                },
                "foundationPayouts": {
                    "type": "string"
                },
                "invitations": {
                    "type": "string"
                },
                "invitationsShare": {
                    "type": "string"
                },
                "total": {
                    "type": "string"
                },
                "validation": {
                    "type": "string"
                },
                "validationShare": {
                    "type": "string"
                },
                "zeroWalletFund": {
                    "type": "string"
                }
            }
        },
        "SavedInviteRewardCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "value": {
                    "type": "string",
                    "enum": [
                        "SavedInvite",
                        "SavedInviteWin"
                    ]
                }
            }
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "blockHash": {
                    "type": "string"
                },
                "blockHeight": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "epoch": {
                    "type": "integer"
                },
                "fee": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "maxFee": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "tips": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "transfer": {
                    "description": "Deprecated",
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "SendTx",
                        "ActivationTx",
                        "InviteTx",
                        "KillTx",
                        "SubmitFlipTx",
                        "SubmitAnswersHashTx",
                        "SubmitShortAnswersTx",
                        "SubmitLongAnswersTx",
                        "EvidenceTx",
                        "OnlineStatusTx",
                        "KillInviteeTx",
                        "ChangeGodAddressTx",
                        "BurnTx",
                        "ChangeProfileTx",
                        "DeleteFlipTx"
                    ]
                }
            }
        },
        "TransactionSpecificData": {
            "type": "object",
            "properties": {
                "becomeOnline": {
                    "type": "boolean"
                },
                "transfer": {
                    "type": "string"
                }
            }
        },
        "TransactionSummary": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "data": {
                    "type": "object"
                },
                "fee": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "maxFee": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "tips": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "SendTx",
                        "ActivationTx",
                        "InviteTx",
                        "KillTx",
                        "SubmitFlipTx",
                        "SubmitAnswersHashTx",
                        "SubmitShortAnswersTx",
                        "SubmitLongAnswersTx",
                        "EvidenceTx",
                        "OnlineStatusTx",
                        "KillInviteeTx",
                        "ChangeGodAddressTx",
                        "BurnTx",
                        "ChangeProfileTx",
                        "DeleteFlipTx"
                    ]
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
